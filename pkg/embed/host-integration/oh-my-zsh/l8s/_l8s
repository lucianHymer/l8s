#compdef l8s

# ZSH completion for l8s - The container management system that really ties the room together

# Get container names from l8s list output
_l8s_get_containers() {
    local filter="$1"
    local containers=()
    local list_output
    
    # Get all containers
    list_output="$(l8s list 2>/dev/null | tail -n +2)"
    
    # Filter based on state if requested
    case "$filter" in
        running)
            # Filter for running containers
            containers=(${(f)"$(echo "$list_output" | grep -i running | awk '{print $1}' | sed 's/^dev-//')"})
            ;;
        stopped)
            # Filter for stopped/created containers
            containers=(${(f)"$(echo "$list_output" | grep -iE '(stopped|created|exited)' | awk '{print $1}' | sed 's/^dev-//')"})
            ;;
        *)
            # All containers
            containers=(${(f)"$(echo "$list_output" | awk '{print $1}' | sed 's/^dev-//')"})
            ;;
    esac
    
    compadd -a containers
}

# Main completion function
_l8s() {
    local curcontext="$curcontext" state line
    typeset -A opt_args
    
    # Define main commands
    local -a commands
    commands=(
        'init:Initialize l8s configuration for remote server'
        'build:Build the base container image on remote server'
        'create:Create a new development container from current git repository'
        'list:List all l8s containers'
        'ls:List all l8s containers (alias for list)'
        'start:Start a stopped container'
        'stop:Stop a running container'
        'remove:Remove the container for current git repository'
        'rm:Remove the container for current git repository (alias for remove)'
        'rebuild:Rebuild the container for current git repository'
        'rebuild-all:Rebuild all containers with updated image'
        'info:Get detailed container information'
        'ssh:SSH into the container for current git repository'
        'exec:Execute command in container for current git repository'
        'paste:Paste clipboard content to container'
        'push:Push code to container for current git repository'
        'pull:Pull code from container for current git repository'
        'status:Show status of container for current git repository'
        'remote:Manage git remotes for containers'
        'connection:Manage SSH connections'
        'install-zsh-plugin:Install ZSH completion plugin'
    )
    
    # Check if we're completing flags for a command
    local cmd_idx=2
    local cmd="${words[$cmd_idx]}"
    
    # Handle flag completion
    if [[ "$PREFIX" == -* ]]; then
        case "$cmd" in
            create)
                compadd -- --branch --dotfiles-path --help
                return 0
                ;;
            remove|rm)
                compadd -- --force -f --keep-volumes --help
                return 0
                ;;
            rebuild)
                compadd -- --build --skip-build --help
                return 0
                ;;
            connection)
                if [[ "${words[3]}" == "switch" ]]; then
                    compadd -- --dry-run --help
                    return 0
                fi
                ;;
            *)
                compadd -- --help
                return 0
                ;;
        esac
    fi
    
    # Handle different completion positions
    case $CURRENT in
        2)
            # Complete commands
            if [[ "$words[1]" == "l8s" ]]; then
                compadd ${commands%%:*}
            fi
            ;;
            
        3)
            # Most commands now derive container from git context
            # Only a few commands still take container names or other arguments
            case "$cmd" in
                start)
                    # Only show stopped containers for start
                    _l8s_get_containers "stopped"
                    ;;
                stop)
                    # Only show running containers for stop
                    _l8s_get_containers "running"
                    ;;
                info)
                    # Show all containers for info
                    _l8s_get_containers
                    ;;
                paste)
                    # Paste now works in git context, no container arg needed
                    # Could complete custom names here but not implemented yet
                    ;;
                remote)
                    # Complete remote subcommands
                    local -a remote_commands
                    remote_commands=(
                        'add:Add a git remote for a container'
                        'remove:Remove a git remote for a container'
                    )
                    compadd ${remote_commands%%:*}
                    ;;
                connection)
                    # Complete connection subcommands
                    local -a connection_commands
                    connection_commands=(
                        'list:List available SSH connections'
                        'show:Show current SSH connection'
                        'switch:Switch to a different SSH connection'
                    )
                    compadd ${connection_commands%%:*}
                    ;;
                # Git-native commands don't take container names:
                # create, ssh, rebuild, remove/rm, exec, push, pull, status
                # all derive container from current git repository
            esac
            ;;
            
        4)
            # Complete for subcommands that need additional arguments
            case "$cmd" in
                remote)
                    if [[ "${words[3]}" == "add" ]] || [[ "${words[3]}" == "remove" ]]; then
                        _l8s_get_containers
                    fi
                    ;;
                connection)
                    if [[ "${words[3]}" == "switch" ]]; then
                        # TODO: Complete available connections
                        # For now, no completion
                    fi
                    ;;
                paste)
                    # After container name, user can optionally provide a filename
                    # No completion for this
                    ;;
                # exec now derives container from git context, so command args start at position 3
            esac
            ;;
            
        *)
            # Don't provide further completions
            ;;
    esac
}

# Register the completion function
_l8s "$@"